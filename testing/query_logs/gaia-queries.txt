SELECT TOP 10 source_id, parallax FROM tgas_source
SELECT TOP 10 * FROM tgas_source WHERE dec < 0 ORDER BY parallax DESC
SELECT COUNT(*) FROM tgas_source AS t, igsl_source_catalog_ids AS i WHERE t.source_id = i.source_id
SELECT TOP 1 'Hello world!' AS greeting, ra, dec FROM tgas_source
SELECT COUNT(*) FROM gaia_source WHERE parallax IS NULL
SELECT COUNT(*) FROM tgas_source AS t INNER JOIN igsl_source_catalog_ids AS i ON t.source_id = i.source_id
SELECT p.*, c.* FROM cepheid AS c, phot_variable_time_series_gfov AS p WHERE p.source_id = c.source_id ORDER BY p.source_id, p.observation_time
SELECT observation_time, g_magnitude FROM phot_variable_time_series_gfov AS p, (SELECT TOP 1 source_id FROM phot_variable_time_series_gfov_statistical_parameters ORDER BY range DESC ) AS t WHERE p.source_id = t.source_id ORDER BY observation_time
SELECT g.ra, g.dec FROM gaia_source AS g, igsl_source AS i WHERE aux_lqrf = 'true' AND g.source_id = i.source_id 
SELECT ra, dec, phot_g_mean_mag FROM gaia_source WHERE ((ra BETWEEN 268.74298 AND 271.25702 AND dec BETWEEN 66.061389 AND 67.061389) OR (ra BETWEEN 88.74298 AND 91.25702 AND dec BETWEEN -67.061389 AND 66.061389)) AND source_id NOT IN (SELECT source_id FROM cepheid)
SELECT ROUND(SQRT(pmra*pmra + pmdec*pmdec), 0) AS muTot, COUNT(*) FROM tgas_source GROUP BY muTot ORDER BY muTot DESC
SELECT *, SQRT(pmra*pmra + pmdec*pmdec) AS muTot FROM tgas_source WHERE SQRT(pmra*pmra + pmdec*pmdec) > 3000
SELECT COUNT(*) FROM tgas_source WHERE pmra*pmra + pmdec*pmdec > 5*SQRT(pmra*pmra*pmra_error*pmra_error + pmdec*pmdec*pmdec_error*pmdec_error)
SELECT TOP 10 * FROM tgas_source WHERE pmra*pmra + pmdec*pmdec < SQRT(pmra*pmra*pmra_error*pmra_error + pmdec*pmdec*pmdec_error*pmdec_error) AND parallax < parallax_error AND (astrometric_excess_noise < 2 OR astrometric_excess_noise_sig <= 2)
SELECT * FROM gaia_source WHERE MOD(random_index, 1000000) = 0
SELECT TOP 5 -ra from gaia_source	
SELECT TOP 10 ra FROM gaia_source WHERE ra IN (SELECT TOP 20 ra FROM gaia_source WHERE ra>0 ORDER BY ra)
SELECT pi() from gaia_source
SELECT rand() from gaia_source
SELECT TOP 10 ra, ra + dec, ra - dec,ra * dec, ra / dec FROM gaia_source where ra > 0 and dec > 0
SELECT TOP 1 dec FROM gaia_source WHERE dec IN (SELECT dec FROM gaia_source WHERE (dec BETWEEN -22.5 AND -12.5))
SELECT TOP 5 ((ra + 6) / 2) AS one, (ra + (6 / 2)) AS two FROM gaia_source
